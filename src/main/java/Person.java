// Инкапсуляция - процесс предоставления интерфейса (это не ключевое слово interface,
// в мое примере это методы - которые могут использоваться в других классах) своего собственного состояния
// в окружающем мире других классов, используя сокрытие данных
// (мы не разрешаем трогать другим классам то, что им трогать не нужно)

// Полиморфизм - ПП - перегрузка и переопределение (еще можно добавить generics)
// перегрузка - методы с одинаковым названием, но разными сигнатурами (например один метод process(int a)
// принимате одно значение int a, второй метод process(int a, int b) - называетсят также, но уже перегружен
// новой перменной int b
// переопределение - у нас есть интерфейс(это уже ключевое слово) Runnable (без реализации), в нем есть один
// (или несколько) метод void run() - У него нет никакой логики, он пустой; Мы создаем класс Person,
// имплементируем (реализовываем) этот интерфейс Runnable : public class Person implements Runnable,
// и переопредляем в нем наш метод void run() - уже даем ему какую-то логику и реализацию

// синглтон - класс, который имеет только единтсвеннй экземпляр
// https://refactoring.guru/
public class Person {

    private String name;
    private String surname;

    public Person(String name, String surname) {
        this.name = name;
        this.surname = surname;
    }

    public void process() {
        name = getStrangeString();
        surname = getStrangeString();
    }

    private String getStrangeString() {
        return name + " хуй ";
    }
}
